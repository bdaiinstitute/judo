judo.simulation.base
====================

.. py:module:: judo.simulation.base




Module Contents
---------------

.. py:class:: Simulation(init_task: str = 'cylinder_push', task_registration_cfg: omegaconf.DictConfig | None = None)

   Bases: :py:obj:`abc.ABC`


   
   Base class for a simulation object.

   This class contains the data required to run a simulation. This includes configurations, a control spline, and task
   information. It can be inherited from to implement specific simulation backends.

   Middleware nodes should instantiate this class and implement methods to send, process, and receive data.

   .. py:attribute:: control
      :type:  Callable | None
      :value: None



   .. py:attribute:: paused
      :value: False



   .. py:method:: set_task(task_name: str) -> None

      
      Helper to initialize task from task name.


   .. py:method:: step() -> None
      :abstractmethod:


      
      Step the simulation forward by one timestep.


   .. py:method:: pause() -> None

      
      Event handler for processing pause status updates.


   .. py:method:: update_control(control_spline: Callable) -> None

      
      Event handler for processing controls received from controller node.


   .. py:property:: timestep
      :type: float

      :abstractmethod:


      
      Timestep the simulation expects to run at.


